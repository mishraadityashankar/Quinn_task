[{"C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\index.js":"1","C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\App.js":"2","C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\Components\\Expanded.js":"4","C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\Components\\Tiles.js":"5"},{"size":500,"mtime":1608825781815,"results":"6","hashOfConfig":"7"},{"size":481,"mtime":1609263179591,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608825781815,"results":"9","hashOfConfig":"7"},{"size":3202,"mtime":1609302084710,"results":"10","hashOfConfig":"7"},{"size":7009,"mtime":1609265293343,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12di07w",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\index.js",[],["26","27"],"C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\App.js",["28"],"import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\n\nimport Tiles from './Components/Tiles';\nimport Expanded from './Components/Expanded';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Tiles}/>\n          <Route path=\"/view\"  component={Expanded}/>\n        </Switch>\n      </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\Components\\Expanded.js",["29","30","31"],"import React, { Component } from 'react';\r\nimport img from '../img_avatar1.png';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'moment';\r\nclass Expanded extends Component {\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"container mb-3\">\r\n                <Link to=\"/\" class=\"btn mb-3\"><i class=\"fa fa-close\"></i></Link>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div class=\"card\" style={{width:\"300px\",height:\"660px\"}}>\r\n                        <h4 class=\"card-text\">{Moment(this.props.location.myCustomProps.CalendarDateTime).format('YYYY-MM-DD')}</h4>\r\n                            <h6 class=\"card-text\">Rating - {this.props.location.myCustomProps.Rating}/5</h6>\r\n                            <img class=\"card-img-top img-fluid\" src={this.props.location.myCustomProps.Images[0].ImageUrl} alt=\"Card image\" style={{width:\"300px\",height:\"400px\"}}/>\r\n                            <div class=\"card-body\">\r\n                            {/* <h4 class=\"card-title\">John Doe</h4> */}\r\n\r\n                            <p class=\"card-text\">{this.props.location.myCustomProps.Text}</p>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div className=\"col\">\r\n                        <div class=\"card\" style={{width:\"300px\",height:\"660px\"}}>\r\n                        <h4 class=\"card-text\">{Moment(this.props.location.myCustomProps.CalendarDateTime).format('YYYY-MM-DD')}</h4>\r\n                            <h6 class=\"card-text\">Rating - {this.props.location.myCustomProps.Rating}/5</h6>\r\n                            <img class=\"card-img-top img-fluid\" src={this.props.location.myCustomProps.Images[0].ImageUrl} alt=\"Card image\" style={{width:\"300px\",height:\"400px\"}}/>\r\n                            <div class=\"card-body\">\r\n                            {/* <h4 class=\"card-title\">John Doe</h4> */}\r\n\r\n                            <p class=\"card-text\">{this.props.location.myCustomProps.Text}</p>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                    <div className=\"col\">\r\n                        <div class=\"card\" style={{width:\"300px\",height:\"660px\"}}>\r\n                        <h4 class=\"card-text\">{Moment(this.props.location.myCustomProps.CalendarDateTime).format('YYYY-MM-DD')}</h4>\r\n                            <h6 class=\"card-text\">Rating - {this.props.location.myCustomProps.Rating}/5</h6>\r\n                            <img class=\"card-img-top img-fluid\" src={this.props.location.myCustomProps.Images[0].ImageUrl} alt=\"Card image\" style={{width:\"300px\",height:\"400px\"}}/>\r\n                            <div class=\"card-body\">\r\n                            {/* <h4 class=\"card-title\">John Doe</h4> */}\r\n\r\n                            <p class=\"card-text\">{this.props.location.myCustomProps.Text}</p>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                    </div>   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Expanded;","C:\\Users\\AdityaShankar\\Desktop\\Quinn\\frontend\\src\\Components\\Tiles.js",["32","33"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Expanded from './Expanded';\r\nconst Tile= props =>(\r\n    <div className=\"col mb-4\">\r\n      <div class=\"card\" style={{width: \"130px\", height: \"130px\"}} >\r\n   \r\n        <img  class=\"card-img-top img-fluid\" src={props.post.Images[0].ImageUrl} style={{width: \"130px\", height: \"130px\"}} alt=\"Card image\">\r\n        </img>\r\n        <div class=\"card-img-overlay\">\r\n        <Link  to=    {{ \r\n          pathname: \"/view\",\r\n          myCustomProps: props.post\r\n        }} style={{color:\"#f0f0f0\"}}>\r\n              {props.sn}\r\n        </Link>\r\n        </div>\r\n       \r\n        </div>\r\n    </div>\r\n)\r\nclass Tiles extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={ Posts : []};\r\n    }\r\n    componentDidMount(){\r\n        const req_body = {\r\n            \"RequestObjects\": [\r\n                {\r\n                    \"Post\": {\r\n                        \"OperationType\": \"Read\",                \r\n                        \"Privacy\": {\r\n                            \"SearchValues\": [\"Public\"],\r\n                            \"Return\": true\r\n                        },      \r\n                        \"UserId\": {\r\n                            \"SearchValues\": [\"assign\"],\r\n                            \"Return\": false\r\n                        },               \r\n                        \"id\": {\r\n                            \"Return\": true\r\n                        },\r\n                        \r\n                        \"IsCalendarEntry\": {\r\n                            \"SearchValues\": [true],\r\n                            \"Return\": true\r\n                        },\r\n                        \"Images\": { \r\n                            \"Return\": true\r\n                        },\t\t\t\t\t\t\t\t\r\n                                         \"Text\": {\r\n                            \"Return\": true \r\n                        },\r\n                                        \"Rating\": {\r\n                            \"Return\": true                    \r\n                        },\r\n                        \"TypeOfDay\":{\r\n                             \"Return\": true\r\n                        },    \r\n                                        // Don't change anything above ^^\t\t\r\n        \r\n                                        //editable variables start below //                               \r\n                                                                \r\n        \r\n                                        \"MaxItemCount\": \"21\", // you can ask between 1 to 25 posts (max) at a time.                \r\n                                                    \r\n                        \"CalendarDateTime\": { // Date Time of a particular post\r\n                            \"Return\": true, // please note: there can be multiple posts on a single day\r\n                            \"Sort\": \"Descending\" // you can sort fetched dates by ascending/descending.\r\n                        },                                \r\n                        \r\n                                        // Think of this as a pagination variable. In your response, you'll receive a continuationToken \r\n                                        // that you could send to fetch the subsequent posts.\r\n                        \"ContinuationToken\": null                \r\n                    }\r\n                }\r\n            ]    \r\n        }\r\n        \r\n        axios.post('https://quinncareapidev.azurewebsites.net/api/graph',req_body)\r\n        .then(response => {\r\n           console.log(response.data.ResponseObjects[0])\r\n           this.setState(\r\n               {\r\n                   Posts : response.data.ResponseObjects[0].Posts\r\n               }\r\n           )\r\n            \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n            alert(\"error\")\r\n\r\n        })  \r\n    }\r\n    TileList(){\r\n        return this.state.Posts.map(function(currentpost, i) {\r\n          //console.log(currentEvent);\r\n          return <Tile post={currentpost} sn={i+1} key={i} />\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mb-3 mt-3\">\r\n                <div className=\"text-center\"><h1>January 2021</h1></div>\r\n                <div className=\"row\">\r\n                    <div className=\"col mb-4\">\r\n                        <div class=\"card\" style={{width: \"130px\", height: \"65px\"}}>\r\n                            <div class=\"card-img-overlay\">\r\n                                <b class=\"card-title\">Mon</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col mb-4\">\r\n                        <div class=\"card\" style={{width: \"130px\", height: \"65px\"}}>\r\n                            <div class=\"card-img-overlay\">\r\n                                <b class=\"card-title\">Tue</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>       \r\n                    <div className=\"col mb-4\">\r\n                        <div class=\"card\" style={{width: \"130px\", height: \"65px\"}}>\r\n                            <div class=\"card-img-overlay\">\r\n                                <b class=\"card-title\">Wed</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col mb-4\">\r\n                        <div class=\"card\" style={{width: \"130px\", height: \"65px\"}}>\r\n                            <div class=\"card-img-overlay\">\r\n                                <b class=\"card-title\">Thu</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col mb-4\">\r\n                        <div class=\"card\" style={{width: \"130px\", height: \"65px\"}}>\r\n                            <div class=\"card-img-overlay\">\r\n                                <b class=\"card-title\">Fri</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col mb-4\">\r\n                        <div class=\"card\" style={{width: \"130px\", height: \"65px\"}}>\r\n                            <div class=\"card-img-overlay\">\r\n                                <b class=\"card-title\">Sat</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col mb-4\">\r\n                        <div class=\"card\" style={{width: \"130px\", height: \"65px\"}}>\r\n                            <div class=\"card-img-overlay\">\r\n                                <b class=\"card-title\">Sun</b>\r\n                            </div>\r\n                        </div>\r\n                    </div>                                                   \r\n                </div>\r\n                \r\n                   <div className=\"row\">\r\n                     {this.TileList()}\r\n                   </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tiles;",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"43","line":16,"column":29,"nodeType":"44","endLine":16,"endColumn":181},{"ruleId":"42","severity":1,"message":"43","line":29,"column":29,"nodeType":"44","endLine":29,"endColumn":181},{"ruleId":"42","severity":1,"message":"43","line":42,"column":29,"nodeType":"44","endLine":42,"endColumn":181},{"ruleId":"38","severity":1,"message":"45","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":9,"column":9,"nodeType":"44","endLine":9,"endColumn":141},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Expanded' is defined but never used.","no-global-assign","no-unsafe-negation"]